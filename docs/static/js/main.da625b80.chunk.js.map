{"version":3,"sources":["helpers/getImages.js","components/MessageError.js","components/Search.js","hooks/useForm.js","components/Dropdown.js","components/ItemImage.js","components/Images.js","hooks/usePagination.js","components/Pagination.js","containers/App.js","reportWebVitals.js","index.js"],"names":["getImages","query","perPage","currentPage","a","url","encodeURI","axios","get","data","console","error","MessageError","message","close","className","type","onClick","Search","handleQuery","initialState","useState","values","setValues","target","name","value","useForm","search","handleValueChange","reset","setError","onSubmit","e","preventDefault","trim","length","htmlFor","id","onChange","placeholder","Dropdown","pages","handlePageSize","show","setShow","handleShow","map","item","index","handlePage","ItemImage","tags","likes","views","comments","downloads","previewURL","largeImageURL","src","alt","icon","faEye","faHeart","faComment","faDownload","href","rel","Images","images","image","DOTS","range","start","end","Array","from","_","idx","Pagination","pageSize","totalCount","siblingCount","onPageChange","paginationRange","useMemo","totalPageCount","Math","ceil","leftSiblingIndex","max","rightSiblingIndex","min","shouldShowLeftDots","shouldShowRightDots","firstPageIndex","lastPageIndex","leftRange","rightRange","middleRange","usePagination","lastPage","classnames","disabled","pageNumber","selected","defaultProps","App","setQuery","setImages","setPageSize","setTotalCount","setCurrentPage","useEffect","hits","totalHits","getData","window","scrollTo","text","page","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAEaA,EAAS,uCAAG,WAAOC,EAAOC,EAASC,GAAvB,mBAAAC,EAAA,sEAET,qCACNC,EAHe,uCAET,qCAFS,cAGgCC,UACnDL,GAJmB,qBAKPC,EALO,iBAKSC,GALT,SAOEI,IAAMC,IAAIH,GAPZ,uBAObI,EAPa,EAObA,KAPa,kBAQdA,GARc,kCAUrBC,QAAQC,MAAM,mBAAd,MAVqB,0DAAH,0D,sBCkBPC,EAlBM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,MAAZ,OACnB,qBAAKC,UAAU,OAAf,SACE,sBAAKA,UAAU,wCAAf,UACE,wBACEC,KAAK,SACLD,UAAU,YACVE,QAAS,kBAAMH,GAAM,MAEvB,yCAAYD,WCyDHK,EA9DA,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,YAAahB,EAAkB,EAAlBA,YAAkB,ECH1B,WAAwB,IAAvBiB,EAAsB,uDAAP,GAAO,EAChBC,mBAASD,GADO,mBACrCE,EADqC,KAC7BC,EAD6B,KAW5C,MAAO,CAACD,EARkB,SAAC,GAAgB,IAAdE,EAAa,EAAbA,OAC3BD,EAAU,2BAAKD,GAAN,kBAAeE,EAAOC,KAAOD,EAAOE,UAGjC,WACZH,EAAUH,KDJ+BO,CAAQ,CAAEC,OAAQ,KADd,mBACxCN,EADwC,KAChCO,EADgC,KACbC,EADa,KAEvCF,EAAWN,EAAXM,OAFuC,EAIrBP,oBAAS,GAJY,mBAIxCV,EAJwC,KAIjCoB,EAJiC,KAoB/C,OACE,sBAAKhB,UAAU,YAAf,UACE,oBAAIA,UAAU,mBAAd,yCACA,uBAAMiB,SAjBK,SAACC,GACdA,EAAEC,iBAEoB,KAAlBN,EAAOO,QAAiBP,EAAOO,OAAOC,OAAS,EACjDL,GAAS,IAIX5B,EAAY,GACZgB,EAAYS,GACZG,GAAS,GACTD,MAM0Bf,UAAU,MAAlC,UACE,sBAAKA,UAAU,sBAAf,UACE,uBAAOsB,QAAQ,SAASC,GAAG,eAAevB,UAAU,iBAApD,6BAGA,uBACEuB,GAAG,SACHtB,KAAK,SACLS,KAAK,SACLC,MAAOE,EACPW,SAAUV,EACVd,UAAU,+BACVyB,YAAY,8DAGhB,qBAAKzB,UAAU,6CAAf,SACE,wBACEC,KAAK,SACLD,UAAU,mEAFZ,yBAQHJ,GACC,cAAC,EAAD,CACEE,QAAQ,sCACRC,MAAOiB,QEHFU,EAjDE,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,MAAOvC,EAAkC,EAAlCA,YAAawC,EAAqB,EAArBA,eAAqB,EACnCtB,oBAAS,GAD0B,mBACpDuB,EADoD,KAC9CC,EAD8C,KAa3D,OACE,sBAAK9B,UAAU,oBAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,wBACEC,KAAK,SACLD,UAAU,4DACVE,QAAS,kBAhBE,SAAC2B,GAClBC,GAASD,GAeYE,CAAWF,IAH5B,SAKE,sBAAM7B,UAAU,kBAAhB,qBAIH6B,GACC,qBAAK7B,UAAU,+BAAf,SACG2B,GACCA,EAAMK,KAAI,SAACC,EAAMC,GAAP,OACR,oBAEElC,UAAU,+BACVE,QAAS,kBAzBJ,SAAC+B,GAClB7C,EAAY,GACZwC,EAAeK,GACfH,GAAQ,GAsBmBK,CAAWF,IAH5B,SAKGA,GALH,UACUA,EADV,YACkBC,a,eCwBjBE,EAhDG,SAAC,GAAD,IAChBC,EADgB,EAChBA,KACAC,EAFgB,EAEhBA,MACAC,EAHgB,EAGhBA,MACAC,EAJgB,EAIhBA,SACAC,EALgB,EAKhBA,UACAC,EANgB,EAMhBA,WACAC,EAPgB,EAOhBA,cAPgB,OAShB,qBAAK3C,UAAU,qCAAf,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAK4C,IAAKF,EAAYG,IAAKR,EAAMrC,UAAU,iBAC3C,sBAAKA,UAAU,mEAAf,UACE,sBAAKA,UAAU,4BAAf,UACE,cAAC,IAAD,CAAiB8C,KAAMC,IAAO/C,UAAU,SACxC,mBAAGA,UAAU,OAAb,SAAqBuC,OAEvB,sBAAKvC,UAAU,4BAAf,UACE,cAAC,IAAD,CAAiB8C,KAAME,IAAShD,UAAU,SAC1C,mBAAGA,UAAU,OAAb,SAAqBsC,OAEvB,sBAAKtC,UAAU,4BAAf,UACE,cAAC,IAAD,CAAiB8C,KAAMG,IAAWjD,UAAU,SAC5C,mBAAGA,UAAU,OAAb,SAAqBwC,OAEvB,sBAAKxC,UAAU,4BAAf,UACE,cAAC,IAAD,CAAiB8C,KAAMI,IAAYlD,UAAU,SAC7C,mBAAGA,UAAU,OAAb,SAAqByC,UAIzB,mBAAGU,KAAMR,EAAelC,OAAO,SAAS2C,IAAI,aAA5C,gDCfSC,EAtBA,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACb,qBAAKtD,UAAU,0CAAf,SACGsD,GACCA,EAAOtB,KAAI,SAACuB,GAAD,OACT,cAAC,EAAD,CAEElB,KAAMkB,EAAMlB,KACZC,MAAOiB,EAAMjB,MACbC,MAAOgB,EAAMhB,MACbC,SAAUe,EAAMf,SAChBC,UAAWc,EAAMd,UACjBC,WAAYa,EAAMb,WAClBC,cAAeY,EAAMZ,eAPhBY,EAAMhC,U,yBCNfiC,EAAO,MAEPC,EAAQ,SAACC,EAAOC,GACpB,IAAItC,EAASsC,EAAMD,EAAQ,EAC3B,OAAOE,MAAMC,KAAK,CAAExC,WAAU,SAACyC,EAAGC,GAAJ,OAAYA,EAAML,MCF5CM,EAAa,SAAC,GAOb,IANLC,EAMI,EANJA,SACAjE,EAKI,EALJA,UACAkE,EAII,EAJJA,WACA9E,EAGI,EAHJA,YACA+E,EAEI,EAFJA,aACAC,EACI,EADJA,aAEMC,EDHqB,SAAC,GAKvB,IAJLH,EAII,EAJJA,WACAD,EAGI,EAHJA,SAGI,IAFJE,oBAEI,MAFW,EAEX,EADJ/E,EACI,EADJA,YAuDA,OArDwBkF,mBAAQ,WAC9B,IAAMC,EAAiBC,KAAKC,KAAKP,EAAaD,GAS9C,GANyBE,EAAe,GAMhBI,EACtB,OAAOd,EAAM,EAAGc,GAGlB,IAAMG,EAAmBF,KAAKG,IAAIvF,EAAc+E,EAAc,GACxDS,EAAoBJ,KAAKK,IAC7BzF,EAAc+E,EACdI,GAQIO,EAAqBJ,EAAmB,EACxCK,EAAsBH,EAAoBL,EAAiB,EAE3DS,EAAiB,EACjBC,EAAgBV,EAEtB,IAAKO,GAAsBC,EAAqB,CAC9C,IACIG,EAAYzB,EAAM,EADF,EAAI,EAAIU,GAG5B,MAAM,GAAN,mBAAWe,GAAX,CAAsB1B,EAAMe,IAG9B,GAAIO,IAAuBC,EAAqB,CAC9C,IACII,EAAa1B,EACfc,GAFmB,EAAI,EAAIJ,GAEO,EAClCI,GAEF,MAAM,CAAES,EAAgBxB,GAAxB,mBAAiC2B,IAGnC,GAAIL,GAAsBC,EAAqB,CAC7C,IAAIK,EAAc3B,EAAMiB,EAAkBE,GAC1C,MAAM,CAAEI,EAAgBxB,GAAxB,mBAAiC4B,GAAjC,CAA8C5B,EAAMyB,OAErD,CAACf,EAAYD,EAAUE,EAAc/E,ICtDhBiG,CAAc,CACpCjG,cACA8E,aACAC,eACAF,aAGF,GAAoB,IAAhB7E,GAAqBiF,EAAgBhD,OAAS,EAChD,OAAO,KAGT,IAQIiE,EAAWjB,EAAgBA,EAAgBhD,OAAS,GAExD,OACE,qBACErB,UAAWuF,IAAW,uBAAD,eAA4BvF,EAAYA,IAD/D,UAGE,oBACEA,UAAWuF,IAAW,kBAAmB,CACvCC,SAA0B,IAAhBpG,IAEZc,QAda,WACjBkE,EAAahF,EAAc,IASzB,SAME,qBAAKY,UAAU,iBAGhBqE,EAAgBrC,KAAI,SAACyD,EAAYvD,GAChC,MAAmB,QAAfuD,EAEA,oBAEEzF,UAAU,uBAFZ,kCACekC,EADf,YACwBuD,IAS1B,oBAEEzF,UAAWuF,IAAW,kBAAmB,CACvCG,SAAUD,IAAerG,IAE3Bc,QAAS,kBAAMkE,EAAaqB,IAL9B,SAOGA,GAPH,eACevD,EADf,YACwBuD,OAW5B,oBACEzF,UAAWuF,IAAW,kBAAmB,CACvCC,SAAUpG,IAAgBkG,IAE5BpF,QApDS,WACbkE,EAAahF,EAAc,IA+CzB,SAME,qBAAKY,UAAU,sBAevBgE,EAAW2B,aAAe,CACxBxB,aAAc,EACdnE,UAAW,IAGEgE,QChDA4B,EA7CH,WAAO,IAAD,EACUtF,mBAAS,IADnB,mBACTpB,EADS,KACF2G,EADE,OAEYvF,mBAAS,IAFrB,mBAETgD,EAFS,KAEDwC,EAFC,OAGgBxF,mBAAS,IAHzB,mBAGT2D,EAHS,KAGC8B,EAHD,OAIoBzF,mBAAS,GAJ7B,mBAIT4D,EAJS,KAIG8B,EAJH,OAKsB1F,mBAAS,GAL/B,mBAKTlB,EALS,KAKI6G,EALJ,KA0BhB,OAfAC,qBAAU,WACM,KAAVhH,IAIS,uCAAG,4BAAAG,EAAA,sEACKJ,EAAUC,EAAO+E,EAAU7E,GADhC,OACRM,EADQ,OAEdoG,EAAUpG,EAAKyG,MACfH,EAActG,EAAK0G,WAHL,2CAAH,oDAMbC,GACAC,OAAOC,SAAS,EAAG,MAClB,CAACrH,EAAO+E,EAAU7E,IAGnB,gCACE,cAAC,EAAD,CAAQgB,YArBQ,SAACoG,GACnBX,EAASW,IAoB2BpH,YAAa6G,IAC/C,cAAC,EAAD,CACEtE,MAAO,CAAC,GAAI,GAAI,GAAI,GAAI,IACxBvC,YAAa6G,EACbrE,eAAgBmE,IAElB,cAAC,EAAD,CAAQzC,OAAQA,IAChB,cAAC,EAAD,CACEW,SAAUA,EACVC,WAAYA,EACZ9E,YAAaA,EACbgF,aAAc,SAACqC,GAAD,OAAUR,EAAeQ,UC/BhCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.da625b80.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const getImages = async (query, perPage, currentPage) => {\r\n  try {\r\n    const key = \"22338182-d32033ca73cb03d5e32127cf6\";\r\n    const url = `https://pixabay.com/api/?key=${key}&q=${encodeURI(\r\n      query\r\n    )}&per_page=${perPage}&page=${currentPage}`;\r\n\r\n    const { data } = await axios.get(url);\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"GET_IMAGES_ERROR\", error);\r\n  }\r\n};\r\n","import { string, func } from \"prop-types\";\r\n\r\nconst MessageError = ({ message, close }) => (\r\n  <div className=\"mt-2\">\r\n    <div className=\"alert alert-dismissible alert-primary\">\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn-close\"\r\n        onClick={() => close(false)}\r\n      ></button>\r\n      <h4>ERROR: {message}</h4>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nMessageError.propTypes = {\r\n  message: string.isRequired,\r\n  close: func.isRequired,\r\n};\r\n\r\nexport default MessageError;\r\n","import { useState } from \"react\";\r\nimport { func } from \"prop-types\";\r\nimport { useForm } from \"../hooks/useForm\";\r\nimport MessageError from \"./MessageError\";\r\n\r\nconst Search = ({ handleQuery, currentPage }) => {\r\n  const [values, handleValueChange, reset] = useForm({ search: \"\" });\r\n  const { search } = values;\r\n\r\n  const [error, setError] = useState(false);\r\n\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (search.trim() === \"\" || search.trim().length < 2) {\r\n      setError(true);\r\n      return;\r\n    }\r\n\r\n    currentPage(1);\r\n    handleQuery(search);\r\n    setError(false);\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"text-center py-4\">Pixabay - Banco de imagenes</h1>\r\n      <form onSubmit={submit} className=\"row\">\r\n        <div className=\"form-group col-md-8\">\r\n          <label htmlFor=\"search\" id=\"label-search\" className=\"col-form-label\">\r\n            Buscar imagenes\r\n          </label>\r\n          <input\r\n            id=\"search\"\r\n            type=\"search\"\r\n            name=\"search\"\r\n            value={search}\r\n            onChange={handleValueChange}\r\n            className=\"form-control form-control-lg\"\r\n            placeholder=\"Busca una imagen, ejemplo futbol, cafÃ©, casas, etc.\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group col-md-4 d-flex align-items-end\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"form-control form-control-lg my-2 my-md-0 btn btn-lg btn-primary\"\r\n          >\r\n            Buscar\r\n          </button>\r\n        </div>\r\n      </form>\r\n      {error && (\r\n        <MessageError\r\n          message=\"Agrega un tÃ©rmino de bÃºsqueda\"\r\n          close={setError}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nSearch.propTypes = {\r\n  handleQuery: func.isRequired,\r\n  currentPage: func.isRequired,\r\n};\r\n\r\nexport default Search;\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const handleValueChange = ({ target }) => {\r\n    setValues({ ...values, [target.name]: target.value });\r\n  };\r\n\r\n  const reset = () => {\r\n    setValues(initialState);\r\n  };\r\n\r\n  return [values, handleValueChange, reset];\r\n};\r\n","import { useState } from \"react\";\r\nimport { arrayOf, number, func } from \"prop-types\";\r\n\r\nconst Dropdown = ({ pages, currentPage, handlePageSize }) => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleShow = (show) => {\r\n    setShow(!show);\r\n  };\r\n\r\n  const handlePage = (item) => {\r\n    currentPage(1);\r\n    handlePageSize(item);\r\n    setShow(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-sm-2\">\r\n      <div className=\"form-group col-md-2\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-info btn-lg dropdown form-control form-control-lg\"\r\n          onClick={() => handleShow(show)}\r\n        >\r\n          <span className=\"dropdown-toggle\">Ver</span>\r\n        </button>\r\n      </div>\r\n\r\n      {show && (\r\n        <div className=\"dropdown-menu drop-down mt-1\">\r\n          {pages &&\r\n            pages.map((item, index) => (\r\n              <li\r\n                key={`${item}-${index}`}\r\n                className=\"dropdown-item item-drop-down\"\r\n                onClick={() => handlePage(item)}\r\n              >\r\n                {item}\r\n              </li>\r\n            ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nDropdown.propTypes = {\r\n  pages: arrayOf(number).isRequired,\r\n  currentPage: func.isRequired,\r\n  handlePageSize: func.isRequired,\r\n};\r\n\r\nexport default Dropdown;\r\n","import { string, number } from \"prop-types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faEye,\r\n  faHeart,\r\n  faComment,\r\n  faDownload,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst ItemImage = ({\r\n  tags,\r\n  likes,\r\n  views,\r\n  comments,\r\n  downloads,\r\n  previewURL,\r\n  largeImageURL,\r\n}) => (\r\n  <div className=\"card border-secondary m-3 card-img\">\r\n    <div className=\"card-body\">\r\n      <img src={previewURL} alt={tags} className=\"card-img-top\" />\r\n      <div className=\"py-2 d-flex align-items-center justify-content-between flex-wrap\">\r\n        <div className=\"d-flex align-items-center\">\r\n          <FontAwesomeIcon icon={faEye} className=\"icon\" />\r\n          <p className=\"text\">{views}</p>\r\n        </div>\r\n        <div className=\"d-flex align-items-center\">\r\n          <FontAwesomeIcon icon={faHeart} className=\"icon\" />\r\n          <p className=\"text\">{likes}</p>\r\n        </div>\r\n        <div className=\"d-flex align-items-center\">\r\n          <FontAwesomeIcon icon={faComment} className=\"icon\" />\r\n          <p className=\"text\">{comments}</p>\r\n        </div>\r\n        <div className=\"d-flex align-items-center\">\r\n          <FontAwesomeIcon icon={faDownload} className=\"icon\" />\r\n          <p className=\"text\">{downloads}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <a href={largeImageURL} target=\"_blank\" rel=\"noreferrer\">\r\n        Ver imagen con mejor calidad\r\n      </a>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nItemImage.propTypes = {\r\n  tags: string.isRequired,\r\n  likes: number.isRequired,\r\n  views: number.isRequired,\r\n  comments: number.isRequired,\r\n  downloads: number.isRequired,\r\n  previewURL: string.isRequired,\r\n  largeImageURL: string.isRequired,\r\n};\r\n\r\nexport default ItemImage;\r\n","import { arrayOf, shape } from \"prop-types\";\r\nimport ItemImage from \"./ItemImage\";\r\n\r\nconst Images = ({ images }) => (\r\n  <div className=\"d-flex flex-wrap justify-content-center\">\r\n    {images &&\r\n      images.map((image) => (\r\n        <ItemImage\r\n          key={image.id}\r\n          tags={image.tags}\r\n          likes={image.likes}\r\n          views={image.views}\r\n          comments={image.comments}\r\n          downloads={image.downloads}\r\n          previewURL={image.previewURL}\r\n          largeImageURL={image.largeImageURL}\r\n        />\r\n      ))}\r\n  </div>\r\n);\r\n\r\nImages.propTypes = {\r\n  images: arrayOf(shape({})).isRequired,\r\n};\r\n\r\nexport default Images;\r\n","import { useMemo } from \"react\";\r\n\r\nconst DOTS = \"...\";\r\n\r\nconst range = (start, end) => {\r\n  let length = end - start + 1;\r\n  return Array.from({ length }, (_, idx) => idx + start);\r\n};\r\n\r\nexport const usePagination = ({\r\n  totalCount,\r\n  pageSize,\r\n  siblingCount = 1,\r\n  currentPage,\r\n}) => {\r\n  const paginationRange = useMemo(() => {\r\n    const totalPageCount = Math.ceil(totalCount / pageSize);\r\n\r\n    // Pages count is determined as siblingCount + firstPage + lastPage + currentPage + 2*DOTS\r\n    const totalPageNumbers = siblingCount + 5;\r\n\r\n    /*\r\n      If the number of pages is less than the page numbers we want to show in our\r\n      paginationComponent, we return the range [1..totalPageCount]\r\n    */\r\n    if (totalPageNumbers >= totalPageCount) {\r\n      return range(1, totalPageCount);\r\n    }\r\n\r\n    const leftSiblingIndex = Math.max(currentPage - siblingCount, 1);\r\n    const rightSiblingIndex = Math.min(\r\n      currentPage + siblingCount,\r\n      totalPageCount\r\n    );\r\n\r\n    /*\r\n      We do not want to show dots if there is only one position left \r\n      after/before the left/right page count as that would lead to a change if our Pagination\r\n      component size which we do not want\r\n    */\r\n    const shouldShowLeftDots = leftSiblingIndex > 2;\r\n    const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\r\n\r\n    const firstPageIndex = 1;\r\n    const lastPageIndex = totalPageCount;\r\n\r\n    if (!shouldShowLeftDots && shouldShowRightDots) {\r\n      let leftItemCount = 3 + 2 * siblingCount;\r\n      let leftRange = range(1, leftItemCount);\r\n\r\n      return [...leftRange, DOTS, totalPageCount];\r\n    }\r\n\r\n    if (shouldShowLeftDots && !shouldShowRightDots) {\r\n      let rightItemCount = 3 + 2 * siblingCount;\r\n      let rightRange = range(\r\n        totalPageCount - rightItemCount + 1,\r\n        totalPageCount\r\n      );\r\n      return [firstPageIndex, DOTS, ...rightRange];\r\n    }\r\n\r\n    if (shouldShowLeftDots && shouldShowRightDots) {\r\n      let middleRange = range(leftSiblingIndex, rightSiblingIndex);\r\n      return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex];\r\n    }\r\n  }, [totalCount, pageSize, siblingCount, currentPage]);\r\n\r\n  return paginationRange;\r\n};\r\n","import classnames from \"classnames\";\r\nimport { number, string, func } from \"prop-types\";\r\nimport { usePagination } from \"../hooks/usePagination\";\r\n\r\nconst Pagination = ({\r\n  pageSize,\r\n  className,\r\n  totalCount,\r\n  currentPage,\r\n  siblingCount,\r\n  onPageChange,\r\n}) => {\r\n  const paginationRange = usePagination({\r\n    currentPage,\r\n    totalCount,\r\n    siblingCount,\r\n    pageSize,\r\n  });\r\n\r\n  if (currentPage === 0 || paginationRange.length < 2) {\r\n    return null;\r\n  }\r\n\r\n  const onNext = () => {\r\n    onPageChange(currentPage + 1);\r\n  };\r\n\r\n  const onPrevious = () => {\r\n    onPageChange(currentPage - 1);\r\n  };\r\n\r\n  let lastPage = paginationRange[paginationRange.length - 1];\r\n\r\n  return (\r\n    <ul\r\n      className={classnames(\"pagination-container\", { [className]: className })}\r\n    >\r\n      <li\r\n        className={classnames(\"pagination-item\", {\r\n          disabled: currentPage === 1,\r\n        })}\r\n        onClick={onPrevious}\r\n      >\r\n        <div className=\"arrow left\" />\r\n      </li>\r\n\r\n      {paginationRange.map((pageNumber, index) => {\r\n        if (pageNumber === \"...\") {\r\n          return (\r\n            <li\r\n              key={`Page-${index}-${pageNumber}`}\r\n              className=\"pagination-item dots\"\r\n            >\r\n              &#8230;\r\n            </li>\r\n          );\r\n        }\r\n\r\n        return (\r\n          <li\r\n            key={`Page-${index}-${pageNumber}`}\r\n            className={classnames(\"pagination-item\", {\r\n              selected: pageNumber === currentPage,\r\n            })}\r\n            onClick={() => onPageChange(pageNumber)}\r\n          >\r\n            {pageNumber}\r\n          </li>\r\n        );\r\n      })}\r\n\r\n      <li\r\n        className={classnames(\"pagination-item\", {\r\n          disabled: currentPage === lastPage,\r\n        })}\r\n        onClick={onNext}\r\n      >\r\n        <div className=\"arrow right\" />\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  onPageChange: func.isRequired,\r\n  totalCount: number.isRequired,\r\n  siblingCount: number,\r\n  currentPage: number.isRequired,\r\n  pageSize: number.isRequired,\r\n  className: string,\r\n};\r\n\r\nPagination.defaultProps = {\r\n  siblingCount: 1,\r\n  className: \"\",\r\n};\r\n\r\nexport default Pagination;\r\n\r\n// totalCount: represents the total count of data available from the source.\r\n// currentPage: represents the current active page. We'll use a 1-based index instead of a traditional 0-based index for our currentPage value.\r\n// pageSize: represents the maximum data that is visible in a single page.\r\n// onPageChange: callback function invoked with the updated page value when the page is changed.\r\n// siblingCount (optional): represents the min number of page buttons to be shown on each side of the current page button. Defaults to 1.\r\n// className (optional): className to be added to the top level container.\r\n","import { useState, useEffect } from \"react\";\r\nimport { getImages } from \"../helpers/getImages\";\r\nimport { Search, Dropdown, Images, Pagination } from \"../components/index\";\r\n\r\nconst App = () => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [images, setImages] = useState([]);\r\n  const [pageSize, setPageSize] = useState(10);\r\n  const [totalCount, setTotalCount] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  const handleQuery = (text) => {\r\n    setQuery(text);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (query === \"\") {\r\n      return;\r\n    }\r\n\r\n    const getData = async () => {\r\n      const data = await getImages(query, pageSize, currentPage);\r\n      setImages(data.hits);\r\n      setTotalCount(data.totalHits);\r\n    };\r\n\r\n    getData();\r\n    window.scrollTo(0, 0);\r\n  }, [query, pageSize, currentPage]);\r\n\r\n  return (\r\n    <div>\r\n      <Search handleQuery={handleQuery} currentPage={setCurrentPage} />\r\n      <Dropdown\r\n        pages={[10, 20, 30, 40, 50]}\r\n        currentPage={setCurrentPage}\r\n        handlePageSize={setPageSize}\r\n      />\r\n      <Images images={images} />\r\n      <Pagination\r\n        pageSize={pageSize}\r\n        totalCount={totalCount}\r\n        currentPage={currentPage}\r\n        onPageChange={(page) => setCurrentPage(page)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styles/index.css\";\r\nimport \"./styles/pagination.scss\";\r\nimport App from \"./containers/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}